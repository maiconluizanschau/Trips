{"ast":null,"code":"import produce from 'immer';\nexport default function reserve(state = [], action) {\n  switch (action.type) {\n    case 'ADD_RESERVE_SUCCESS':\n      return produce(state, draft => {\n        draft.push(action.trip);\n      });\n\n    case 'REMOVE_RESERVE':\n      return produce(state, draft => {\n        const tripIndex = draft.findIndex(trip => trip.id === action.id);\n\n        if (tripIndex >= 0) {\n          draft.splice(tripIndex, 1);\n        }\n      });\n\n    case 'UPDATE_RESERVE_SUCCESS':\n      {\n        return produce(state, draft => {\n          const tripIndex = draft.findIndex(trip => trip.id === action.id);\n\n          if (tripIndex >= 0) {\n            draft[tripIndex].amount = Number(action.amount);\n          }\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/maicon/Área de Trabalho/Area de Trabalho/Projetos/react-estudo/trips/src/store/modules/reserve/reducer.js"],"names":["produce","reserve","state","action","type","draft","push","trip","tripIndex","findIndex","id","splice","amount","Number"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAG,EAAzB,EAA6BC,MAA7B,EAAqC;AAElD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,qBAAL;AACE,aAAOJ,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAE7BA,QAAAA,KAAK,CAACC,IAAN,CAAWH,MAAM,CAACI,IAAlB;AAED,OAJa,CAAd;;AAKF,SAAK,gBAAL;AACE,aAAOP,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC7B,cAAMG,SAAS,GAAGH,KAAK,CAACI,SAAN,CAAgBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACO,EAA3C,CAAlB;;AAEA,YAAGF,SAAS,IAAI,CAAhB,EAAkB;AAChBH,UAAAA,KAAK,CAACM,MAAN,CAAaH,SAAb,EAAwB,CAAxB;AACD;AAEF,OAPa,CAAd;;AASF,SAAK,wBAAL;AAA+B;AAE7B,eAAOR,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC7B,gBAAMG,SAAS,GAAGH,KAAK,CAACI,SAAN,CAAgBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACO,EAA3C,CAAlB;;AAGA,cAAGF,SAAS,IAAI,CAAhB,EAAkB;AAChBH,YAAAA,KAAK,CAACG,SAAD,CAAL,CAAiBI,MAAjB,GAA0BC,MAAM,CAACV,MAAM,CAACS,MAAR,CAAhC;AACD;AAEF,SARa,CAAd;AAUD;;AACD;AACE,aAAOV,KAAP;AA/BJ;AAiCD","sourcesContent":["import produce from 'immer';\r\n\r\nexport default function reserve(state = [], action ){\r\n  \r\n  switch(action.type){\r\n    case 'ADD_RESERVE_SUCCESS':\r\n      return produce(state, draft => {\r\n\r\n        draft.push(action.trip);\r\n\r\n      });\r\n    case 'REMOVE_RESERVE':\r\n      return produce(state, draft => {\r\n        const tripIndex = draft.findIndex(trip => trip.id === action.id);\r\n\r\n        if(tripIndex >= 0){\r\n          draft.splice(tripIndex, 1);\r\n        }\r\n\r\n      });\r\n    \r\n    case 'UPDATE_RESERVE_SUCCESS': {\r\n\r\n      return produce(state, draft => {\r\n        const tripIndex = draft.findIndex(trip => trip.id === action.id);\r\n\r\n\r\n        if(tripIndex >= 0){\r\n          draft[tripIndex].amount = Number(action.amount);\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}